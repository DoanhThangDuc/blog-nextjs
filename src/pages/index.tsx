import { observer } from "mobx-react-lite";
import { NextPage } from "next";
import Head from "next/head";
import React, { useState } from "react";

import { Layout } from "@/components/Layout/Layout";
import { ModalLogin } from "@/components/modalLogin /ModalLogin";
import { PageLayout } from "@/components/PageLayout/PageLayout";
import { Posts } from "@/components/Posts/Posts";
import { IServerRenderProps } from "@/shared/types";
import { HomeData, HomeStore } from "@/stores/HomeStore";
import { ModalLoginStore } from "@/stores/ModalLoginStore";
import { useRootStore } from "@/stores/rootStore";

export type IHomeProps =
  | {
      pageData: HomeData;
    } & IServerRenderProps;

export const APP_URL =
  "https://newsapi.org/v2/everything?q=tesla&from=2023-06-21&sortBy=publishedAt&apiKey=1b4b963ff661428ebe4b361015bd015c";

const IndexPage: NextPage<IHomeProps> = observer<IHomeProps>((props) => {
  const rootStore = useRootStore();
  const { posts } = props.pageData;

  const [homeStore] = useState(() => new HomeStore(rootStore));
  const [modalLoginStore] = useState(() => new ModalLoginStore(rootStore));

  return (
    <>
      <Head>
        <title>Blog App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <PageLayout
        driver={homeStore}
        renderPosts={() => <Posts driver={posts} />}
      >
        <Layout driver={rootStore} />
      </PageLayout>
    </>
  );
});

export async function getServerSideProps(ctx: any) {
  const { rootStore } = ctx as any;

  const pageStore = new HomeStore(rootStore);
  await pageStore.fetchPageDataServer();

  return {
    props: {
      pageData: pageStore.dehydrate(),
      isServerRender: true,
    },
  };
}
export default IndexPage;
